@model ProyectoXalli_Gentelella.Models.ResetPasswordViewModel
@{
    ViewBag.Title = "Restablecer contraseña";
    Layout = "~/Views/Shared/_LoginLayout.cshtml";
}

<style>
    .login_content h1::before {
        background: none !important;
    }

    .login_content h1::after {
        background: none !important;
    }

    .input-group-btn .btn {
        margin-bottom: 50px !important;
    }
</style>

<div>
    <a class="hiddenanchor" id="signup"></a>
    <a class="hiddenanchor" id="signin"></a>

    <div class="login_wrapper">
        <div class="animate form login_form">
            <div class="login_content">
                @using (Html.BeginForm("ResetPassword", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" })) {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                    <div>
                        <img class="img-responsive" src="~/images/BlackLogo.png" />
                        <br />
                        <p style="font-style:italic !important; font-size:16px !important;">@ViewBag.mensaje</p>
                        <br />

                        @Html.ValidationSummary("", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.Code)
                        <div class="form-group">
                            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                            @Html.TextBoxFor(m => m.UserName, new { @class = "form-control", @placeholder = "Nombre de Usuario" })
                        </div>

                        <div class="form-group">
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                            <div class="input-group" style="margin-bottom:-30px!important">
                                @Html.PasswordFor(m => m.Password, new { @class = "form-control", @id = "newPass", @placeholder = "Ingrese la nueva contraseña" })
                                <span class="input-group-btn">
                                    <button type="button" onclick="mostrarPassword('newPass')" class="btn btn-primary"><span class="newPass fa fa-eye-slash"></span></button>
                                </span>
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                            <div class="input-group" style="margin-bottom:-30px!important">
                                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", @id = "newPassConf", @placeholder = "Confirme la contraseña" })
                                <span class="input-group-btn">
                                    <button type="button" onclick="mostrarPassword('newPassConf')" class="btn btn-primary"><span class="newPassConf fa fa-eye-slash"></span></button>
                                </span>
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" class="btn btn-default" value="Restablecer" />
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        function mostrarPassword(id) {
            var cambio = document.getElementById(id);
            if (cambio.type == "password") {
                cambio.type = "text";
                $('.' + id).removeClass('fa fa-eye-slash').addClass('fa fa-eye');
            } else {
                cambio.type = "password";
                $('.' + id).removeClass('fa fa-eye').addClass('fa fa-eye-slash');
            }
        }
    </script>
}
